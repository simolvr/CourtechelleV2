{#
 Javascript geocoding for listing search with place auto completion
#}
{% trans_default_domain 'cocorico_geo' %}


{% include '@CocoricoGeo/Common/js/_geocoding_js.html.twig' with {
'map_elt': map_elt,
'auto_complete_elt': auto_complete_elt,
'default_lat': default_lat|default,
'default_lng': default_lng|default,
'default_zoom': default_zoom|default,
'display_marker': display_marker is not defined ? true : display_marker
} only %}

{#Auto fill location search field#}
{% set user_address = false %}
{% set user = app.user %}
{% if user is not null and is_granted("IS_AUTHENTICATED_FULLY") %}
    {% if user.addresses|length %}
        {% set address = user.addresses.first %}
        {% set user_address = { 'zip': address.zip, 'city': address.city, 'country': address.country|country_name } %}
    {% endif %}
{% endif %}

<script>
    $(function () {

        var $searchForm = $("{{ auto_complete_elt }}").closest("form");

        $searchForm.submit(function (e) {
            e.preventDefault();
            $.when(
                    geocodeFunc($("{{ auto_complete_elt }}").val())
            ).then(
                    geocodeSuccess, geocodeError
            );
        });

        //Center modal dialog box
        $('.modal').on('show.bs.modal', centerModal);

        $(window).on("resize", function () {
            $('.modal:visible').each(centerModal);
        });

        function geocodeSuccess(result) {
            fillAddressFields(result);
            //Disable form fields with empty value. These empty fields wont be added to the url
//            $searchForm.find('select:not(:has(option:selected[value!=""]))').attr('disabled', 'disabled');
//            $searchForm.find('input[type=text], input[type=time]').each(function(){
//                if (!$(this).val()) {
//                    $(this).attr('disabled', 'disabled');
//                }
//            });
            $searchForm.unbind('submit').submit();
        }

        function geocodeError(result) {
            // TRIGGER MODAL
            var modal = $('#modal');
            modal.find('.modal-body .title').html('{{ 'cocorico.search.invalidate.address' | trans({}, 'cocorico') }}');
            modal.modal('show');
        }

        function fillAddressFields(result) {
            var resultLocale = result[locale];
            var extendSearch = {{ extend_search|default('') ? 'true' : 'false' }};
            var $zip = $("#location_zip");

            if (extendSearch) {
                //Google zip inconsistency: P
                //Resolve zip code changing between geocoding requests while extending search.
                var zip = $zip.val();
                if (zip && resultLocale.postal_code) {
                    //Zip has changed
                    if (zip.substring(0, 2) != resultLocale.postal_code.substring(0, 2)) {
                        $zip.val(zip.substring(0, 2));//We change zip code to the old value
                        return;
                    }
                }
            }

            $("#page").val(1);
            $("#location_lat").val(result.lat);
            $("#location_lng").val(result.lng);
            $("#location_viewport").val(result.viewport);
            $("#location_addressType").val(result.types);
            $("#location_country").val(resultLocale.country_short);
            $("#location_area").val(resultLocale.administrative_area_level_1);
            $("#location_department").val(resultLocale.administrative_area_level_2);
            $("#location_city").val(resultLocale.locality);
            $zip.val(resultLocale.postal_code);
            $("#location_route").val(resultLocale.route);
            $("#location_streetNumber").val(resultLocale.street_number);
        }

        guessUserLocation();
        /**
         * Guess user location from database user address, geolocation ip or html5 geolocation
         * If a user location is found then fill search address field with this value
         */
        function guessUserLocation() {
            var $location = $("#location");
            var userAddress = {{ user_address| json_encode | raw  }};
            var userLocation = [];

            if (userAddress && userAddress.zip && userAddress.country) {//Database user address
                userLocation = {
                    "location": userAddress.zip,
                    "country": userAddress.country
                };
                fillAddressField(userLocation);
            } else if (navigator.geolocation) {//HTML5 geolocation
                var timeout = 10000;
                var html5GeoLocTimeout = setTimeout(html5GeoLocError, timeout);

                navigator.geolocation.getCurrentPosition(html5GeoLocSuccess, html5GeoLocError, {
                    enableHighAccuracy: true, timeout: timeout, maximumAge: 3600000
                });
            } else {//IP Geolocation
                geoLocateIP();
            }


            /**
             * Try to geo locate user through HTML5 geolocation
             *
             * @param pos
             */
            function html5GeoLocSuccess(pos) {
                clearTimeout(html5GeoLocTimeout);
                var position = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
                var location = false;
                var country = false;

                //Reverse geocoding
                geocoder.geocode({'latLng': position}, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var result = results[0];
                        if (result) {
                            $.each(result.address_components, function (index, object) {
                                $.each(object.types, function (index, name) {
                                    if (name == "postal_code" || name == "administrative_area_level_2_short") {
                                        if (name == "postal_code") {
                                            location = object.long_name;
                                        } else {
                                            var area2 = object.long_name;
                                            if (area2 && area2.match(/\d+/g) != null) {//is it number in it?
                                                if (!location) {
                                                    location = object.long_name;
                                                }
                                            }
                                        }
                                    } else if (name == "country") {
                                        country = object.long_name;
                                    }

                                    if (location && country) return false;
                                });
                                if (location && country) return false;
                            });

                            userLocation = {
                                "location": location,
                                "country": country
                            };
                            fillAddressField(userLocation);
                        }
                    }//status OK
                });//geocoder.geocode
            }

            /**
             * HTML5 geolocation is not possible
             *
             * @param error
             */
            function html5GeoLocError(error) {
                clearTimeout(html5GeoLocTimeout);
                geoLocateIP();//IP Geolocation
            }

            /**
             * Geo locate user through his IP
             */
            function geoLocateIP() {
                geoLocateIPFunc(function (location) {
                    userLocation = {
                        "location": location.cityName, //location.zipCode,
                        "country": location.countryName
                    };
                    fillAddressField(userLocation);
                });
            }

            /**
             * Fill address field after guessing user address
             *
             * @param userLocation
             */
            function fillAddressField(userLocation) {
                if (!$location.val()) {
                    if (userLocation.location) {
                        $location.val(userLocation.location + ", ");
                    }

                    if (userLocation.country) {
                        $location.val($location.val() + userLocation.country);
                    }
                }
            }
        }
    });
</script>
